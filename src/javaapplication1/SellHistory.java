/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author saleh
 */
public class SellHistory extends javax.swing.JFrame {

    /**
     * Creates new form SellHistory
     */
    
    Variables vr = new Variables();
    //int tabindex = -1;
    
    public SellHistory() {
        initComponents();
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        try {
            showselltable();
        } catch (SQLException ex) {
            Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBTN = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SearchBox = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        srchbydate = new javax.swing.JButton();
        details = new javax.swing.JButton();
        copyright = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(29, 31, 47));
        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBTN.setBackground(new java.awt.Color(29, 31, 47));
        backBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/undo.png"))); // NOI18N
        backBTN.setPreferredSize(new java.awt.Dimension(58, 32));
        backBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBTNMouseClicked(evt);
            }
        });
        jPanel1.add(backBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("Sell History");
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(1260, 540));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL.", "Product ID", "Quantity", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, 860, 180));

        SearchBox.setBackground(new java.awt.Color(255, 255, 255));
        SearchBox.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        SearchBox.setForeground(new java.awt.Color(102, 102, 102));
        SearchBox.setText("Search here...");
        SearchBox.setPreferredSize(new java.awt.Dimension(300, 45));
        SearchBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchBoxFocusLost(evt);
            }
        });
        jPanel1.add(SearchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 320, -1));

        SearchBtn.setBackground(new java.awt.Color(29, 31, 47));
        SearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/magnifying-glass.png"))); // NOI18N
        SearchBtn.setPreferredSize(new java.awt.Dimension(40, 45));
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
        });
        jPanel1.add(SearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 60, -1));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(1260, 540));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 860, 480));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Items");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 500, -1, -1));

        jDateChooser1.setDateFormatString("MMM dd, y");
        jDateChooser1.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 150, 40));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("To                                       :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("From                                  :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jDateChooser2.setDateFormatString("MMM dd, y");
        jDateChooser2.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 150, 40));

        srchbydate.setBackground(new java.awt.Color(29, 31, 47));
        srchbydate.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        srchbydate.setForeground(new java.awt.Color(255, 255, 255));
        srchbydate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/schedule.png"))); // NOI18N
        srchbydate.setText(" Search");
        srchbydate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                srchbydateMouseClicked(evt);
            }
        });
        jPanel1.add(srchbydate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, -1, -1));

        details.setBackground(new java.awt.Color(29, 31, 47));
        details.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        details.setForeground(new java.awt.Color(255, 255, 255));
        details.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/detail.png"))); // NOI18N
        details.setText(" Show Details");
        details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsMouseClicked(evt);
            }
        });
        jPanel1.add(details, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 600, -1, -1));

        copyright.setForeground(new java.awt.Color(255, 255, 255));
        copyright.setText("Copyright Â© 2021, TechnoBot BD");
        jPanel1.add(copyright, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 700, -1, -1));

        jButton1.setBackground(new java.awt.Color(29, 31, 47));
        jButton1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/money.png"))); // NOI18N
        jButton1.setText("Max Sold Amount");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        jButton2.setBackground(new java.awt.Color(29, 31, 47));
        jButton2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/low-price.png"))); // NOI18N
        jButton2.setText("Min Sold Amount");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, -1, -1));

        jButton3.setBackground(new java.awt.Color(29, 31, 47));
        jButton3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/max.png"))); // NOI18N
        jButton3.setText("Max Sell in a day of all times");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBTNMouseClicked
        // TODO add your handling code here:
        HomePage hp = new HomePage();
        hp.setLocationRelativeTo(null);
        hp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBTNMouseClicked

    private void SearchBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBoxFocusGained
        // TODO add your handling code here:
        if(SearchBox.getText().equals("Search here...")){
            SearchBox.setText("");
            SearchBox.requestFocus();
            SearchBox.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_SearchBoxFocusGained

    private void SearchBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBoxFocusLost
        // TODO add your handling code here:
        if(SearchBox.getText().length()== 0){
            SearchBox.setText("Search here...");
            SearchBox.setForeground(new Color(102,102,102));
        }
    }//GEN-LAST:event_SearchBoxFocusLost

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        // TODO add your handling code here:
        if(SearchBox.getText().length()== 0 || SearchBox.getText().equals("Search here...")){
            JOptionPane.showMessageDialog(null, "Invalid input", "Caution", JOptionPane.OK_OPTION);
        }
        else{
            try {
                searchselltable();
            } catch (SQLException ex) {
                Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void srchbydateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_srchbydateMouseClicked
        // TODO add your handling code here:
        if(jDateChooser1.getDate() == null || jDateChooser2.getDate() == null){
            JOptionPane.showMessageDialog(null, "Date input invalid", "Caution", JOptionPane.OK_OPTION);
        }
        else{
            try {
                searchselltablebydate();
            } catch (SQLException ex) {
                Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_srchbydateMouseClicked

    private void detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsMouseClicked
        // TODO add your handling code here:
        if(jTable2.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(null, "Please, Select one row to see details", "Caution", JOptionPane.OK_OPTION);
        }
        else{
            //System.out.println("Reached here");
            int index = jTable2.getSelectedRow();
            TableModel tm =  jTable2.getModel();
            String id = tm.getValueAt(index, 0).toString();
            //System.out.println(id);
            try {
                selldetails(id);
            } catch (SQLException ex) {
                Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_detailsMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            // TODO add your handling code here:
            maxsoldAmount();
        } catch (SQLException ex) {
            Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        try {
            // TODO add your handling code here:
            minsoldAmount();
        } catch (SQLException ex) {
            Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        try {
            // TODO add your handling code here:
            maxsell();
        } catch (SQLException ex) {
            Logger.getLogger(SellHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    
    public void showselltable()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            String sql = "SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME,SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID order by S.ID desc";
            
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println("ERROR");
        }
    }
    
    public void searchselltable()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            String srch = "%"+SearchBox.getText()+"%";
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            //String sql = "Select * From PRODUCTS";
            
            //Statement st = conn.createStatement();
            PreparedStatement pst = conn.prepareStatement("SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME,SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID AND (S.SELL_ID LIKE ? OR C.CUSTOMER_ID LIKE ? OR C.CUSTOMER_NAME LIKE ? OR C.CUSTOMER_PHONE LIKE ? OR S.SELLER_NAME LIKE ?) order by S.ID desc");
            pst.setString(1, srch);
            pst.setString(2, srch);
            pst.setString(3, srch);
            pst.setString(4, srch);
            pst.setString(5, srch);
            
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println(e);
            System.out.println("ERROR");
        }
    }
    
    public void searchselltablebydate()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            DateFormat df = new SimpleDateFormat("MMM dd, y");
            String from = df.format(jDateChooser2.getDate());
            String to = df.format(jDateChooser1.getDate());
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            //String sql = "Select * From PRODUCTS";
            
            //Statement st = conn.createStatement();
            PreparedStatement pst = conn.prepareStatement("SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME,SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID AND S.SELL_DATE Between ? And ? order by S.ID desc");
            pst.setString(1, from);
            pst.setString(2, to);
            
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println(e);
            System.out.println("ERROR");
        }
    }
    
    public void maxsoldAmount()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            String sql = "SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME,SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID AND SA.TOTAL_PRICE = (SELECT  MAX(TOTAL_PRICE) FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID )";
            
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println("ERROR");
        }
    }
    
    public void minsoldAmount()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            String sql = "SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME,SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID AND SA.TOTAL_PRICE = (SELECT  MIN(TOTAL_PRICE) FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID )";
            
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println("ERROR");
        }
    }
    
    public void maxsell()throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            jTable2.setModel(new DefaultTableModel(null, new String [] {"Sell ID", "Customer ID", "Customer Name", "Customer Phone", "Sold By", "Date", "Time", "Total Amount"}));
            
            String sql = "SELECT  S.SELL_ID,C.CUSTOMER_ID,C.CUSTOMER_NAME,C.CUSTOMER_PHONE,S.SELLER_NAME,S.SELL_DATE,S.SELL_TIME, SA.TOTAL_PRICE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID AND S.SELL_DATE = (SELECT TOP 1 SELL_DATE FROM CUSTOMERS C,SELLS S,SELL_AMOUNT SA WHERE C.CUSTOMER_ID=S.CUSTOMER_ID AND S.SELL_ID = SA.SELL_ID Group By SELL_DATE order by COUNT(SELL_DATE) desc) Order by S.ID desc";
            
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                String sid = rs.getString("SELL_ID");
                String cid = rs.getString("CUSTOMER_ID");
                String cname = rs.getString("CUSTOMER_NAME");
                String cphone = rs.getString("CUSTOMER_PHONE");
                String sname = rs.getString("SELLER_NAME");
                String sdate = rs.getString("SELL_DATE");
                String stime = rs.getString("SELL_TIME");
                String prc = rs.getString("TOTAL_PRICE");
                
                String tbdata[] = {sid,cid,cname,cphone,sname,sdate,stime,prc};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable2.getModel();
                apt.addRow(tbdata);
            }
            conn.close();
        }catch(SQLException e){
            System.out.println("ERROR");
        }
    }
    
    public void selldetails(String id)throws SQLException{
        //String url ="jdbc:sqlserver://KAMI\\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "123456789";
        
        //String url ="jdbc:sqlserver://DESKTOP-4I9BNBL\SQLEXPRESS:1433;databaseName=TECHNOBOT";
        //String user = "sa";
        //String password = "salsabeel02";
        
        try{
            Connection conn = DriverManager.getConnection(vr.url, vr.user, vr.password);
            
            jTable1.setModel(new DefaultTableModel(null, new String [] {"SL.", "Product ID", "Quantity", "Amount(BDT)"}));
            
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM SELL_ITEM Where SELL_ID = ?");
            pst.setString(1, id);
            
            ResultSet rs = pst.executeQuery();
            int sl = 0;
            while(rs.next()){
                sl++;
                String serial = Integer.toString(sl);
                String pid = rs.getString("PRODUCT_ID");
                String qt = String.valueOf(rs.getInt("QUANTITY"));
                String amnt = rs.getString("AMOUNT");
                
                String tbdata[] = {serial,pid,qt,amnt};
                
                DefaultTableModel apt =  (DefaultTableModel) jTable1.getModel();
                apt.addRow(tbdata);
                
            }
            conn.close();
        }catch(SQLException e){
            System.out.println("ERROR");
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SellHistory sh = new SellHistory();
                sh.setLocationRelativeTo(null);
                sh.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SearchBox;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton backBTN;
    private javax.swing.JLabel copyright;
    private javax.swing.JButton details;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel name;
    private javax.swing.JButton srchbydate;
    // End of variables declaration//GEN-END:variables
}
